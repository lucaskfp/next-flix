import Head from "next/head";
import fetcher from "constants/fetcher";
import Link from "next/link";
import slugify from "constants/slugify";
import tmdbConfigs from "constants/tmdbConfigs";

export default function Home({
  movies,
  series,
  tmdnConfigs,
  genresMoviesData,
}) {
  console.log(genresMoviesData);

  return (
    <>
      <Head>
        <title>Next Flix</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <header className="py-4 bg-white shadow lg:hidden">
        <h1 className="text-center font-bold text-xl">NEXT FLIX</h1>
      </header>

      <div className="py-10">
        <section className="mb-10 lg:mb-20">
          <h2 className="mb-4 text-xl lg:text-2xl font-bold <lg:px-4">
            Trending Filmes
          </h2>
          <div
            className="flex lg:flex-wrap gap-4 <lg:(overflow-x-auto px-4)"
            style={{ scrollSnapType: "x mandatory" }}
          >
            {movies.map((movie) => (
              <div
                key={movie.id}
                className="relative "
                style={{ scrollSnapAlign: "end" }}
              >
                <img
                  src={`${tmdnConfigs.images.secure_base_url}${tmdnConfigs.images.poster_sizes[2]}${movie.poster_path}`}
                  alt={movie.title}
                  loading="lazy"
                  className="rounded <lg:min-w-40"
                />
                <Link href={`/filmes/${slugify(movie.title)}-${movie.id}`}>
                  <a className="absolute top-0 left-0 right-0 bottom-0"></a>
                </Link>
              </div>
            ))}
          </div>
        </section>

        <section className="">
          <h2 className="mb-4 text-xl lg:text-2xl font-bold <lg:px-4">
            Trending SÃ©ries
          </h2>
          <div
            className="flex lg:flex-wrap gap-4 <lg:(overflow-x-auto px-4)"
            style={{ scrollSnapType: "x mandatory" }}
          >
            {series.map((serie) => (
              <div key={serie.id} style={{ scrollSnapAlign: "end" }}>
                <img
                  src={`${tmdnConfigs.images.secure_base_url}${tmdnConfigs.images.poster_sizes[2]}${serie.poster_path}`}
                  alt={serie.title}
                  loading="lazy"
                  className="rounded <lg:min-w-40"
                />
              </div>
            ))}
          </div>
        </section>
      </div>
    </>
  );
}

export async function getStaticProps() {
  const responseMovies = await fetcher("trending/movie/day");
  const dataMovies = await responseMovies.json();
  const { results: movies } = dataMovies;

  const responseSeries = await fetcher("discover/tv");
  const dataSeries = await responseSeries.json();
  const { results: series } = dataSeries;

  const genresMovies = await fetcher("trending/tv/day");
  const genresMoviesData = await genresMovies.json();

  const tmdnConfigs = await tmdbConfigs();

  return {
    props: { movies, series, tmdnConfigs, genresMoviesData },
    revalidate: 14400,
  };
}
